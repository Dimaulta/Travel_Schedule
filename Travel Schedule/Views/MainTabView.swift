//
//  MainTabView.swift
//  Travel Schedule
//
//  Created by –£–ª—å—Ç–∞ on 22.10.2025.
//

import SwiftUI

struct MainTabView: View {
    @State private var selectedTab = 0
    @State private var showServerError = false
    @State private var showNoInternet = false
    @StateObject private var networkMonitor = NetworkMonitor()
    @StateObject private var sessionManager = SessionManager()
    
    var body: some View {
        VStack(spacing: 0) {
            // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å NavigationStack
            if selectedTab == 0 {
                NavigationStack {
                    MainScreenView(
                        sessionManager: sessionManager,
                        onServerError: { showServerError = true },
                        onNoInternet: { showNoInternet = true },
                        onTabSelected: { tabIndex in
                            selectedTab = tabIndex
                        }
                    )
                }
            } else {
                NavigationStack {
                    SettingsScreenView()
                }
            }
            
            // Tab Bar —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
            VStack(spacing: 0) {
                Divider()
                    .background(Color("GrayUniversal"))
                
                HStack {
                    Button(action: {
                        selectedTab = 0
                    }) {
                        VStack(spacing: 4) {
                            Image("Schedule")
                                .renderingMode(Image.TemplateRenderingMode.template)
                                .resizable()
                                .scaledToFit()
                                .frame(width: 30, height: 30)
                                .foregroundColor(selectedTab == 0 ? Color("Black") : Color("GrayUniversal"))
                        }
                    }
                    .frame(maxWidth: .infinity)
                    
                    Button(action: {
                        selectedTab = 1
                    }) {
                        VStack(spacing: 4) {
                            Image("Settings")
                                .renderingMode(Image.TemplateRenderingMode.template)
                                .resizable()
                                .scaledToFit()
                                .frame(width: 30, height: 30)
                                .foregroundColor(selectedTab == 1 ? Color("Black") : Color("GrayUniversal"))
                        }
                    }
                    .frame(maxWidth: .infinity)
                }
                .padding(.vertical, 8)
                .background(Color("White"))
            }
        }
        .background(Color("White"))
        .fullScreenCover(isPresented: $showServerError) {
            ServerErrorView(onTabSelected: { tabIndex in
                selectedTab = tabIndex
                showServerError = false
            })
        }
        .fullScreenCover(isPresented: $showNoInternet) {
            NoInternetView(onTabSelected: { tabIndex in
                selectedTab = tabIndex
                showNoInternet = false
            })
            .onAppear {
                print("üîç MainTabView: NoInternetView –ø–æ—è–≤–∏–ª—Å—è")
            }
            .onDisappear {
                print("üîç MainTabView: NoInternetView –∏—Å—á–µ–∑")
            }
        }
        .onChange(of: showNoInternet) { newValue in
            print("üîç MainTabView: showNoInternet –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞: \(newValue)")
        }
        .onChange(of: networkMonitor.isConnected) { isConnected in
            print("üîç MainTabView: onChange —Å—Ä–∞–±–æ—Ç–∞–ª, isConnected = \(isConnected)")
            print("üîç MainTabView: showNoInternet = \(showNoInternet)")
            if !isConnected {
                print("üîç MainTabView: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω '–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'")
                showNoInternet = true
            } else if isConnected && showNoInternet {
                print("üîç MainTabView: –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω '–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'")
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω "–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞" –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
                showNoInternet = false
            }
        }
        .onAppear {
            print("üîç MainTabView: onAppear –≤—ã–∑–≤–∞–Ω")
        }
    }
}

#Preview {
    MainTabView()
}
